package main

import (
	"fmt"
	"net/http"
	"github.com/go-chi/chi/v5"
	"github.com/go-chi/chi/v5/middleware"
	"{{.ModuleName}}/pkg/db"
	"{{.ModuleName}}/pkg/logger"
	{{if .IsMonolith}}
	"{{.HandlerImport}}"
	{{else}}
	"{{.ModuleName}}/internal/interface/http/v1/routes"
	"{{.ModuleName}}/internal/interface/http/v1/handlers"
	"{{.ModuleName}}/internal/application/services"
	"{{.ModuleName}}/internal/infrastructure/postgres"
	{{end}}
)

func main() {
	// init db
	dbConn, err := db.InitDB()
	if err != nil {
		fmt.Println(err)
	}
	defer dbConn.Close()

	// init logger
	logger.InitLogger()

	// init router
	r := chi.NewRouter()

	r.Use(middleware.Recoverer)

	{{if .IsMonolith}}
	
	{{else}}
	// Microservice routes
	r.Mount("/api", routes.Routes())
	{{end}}

	fmt.Println("Server starting on :8080")
	http.ListenAndServe(":8080", r)
}
