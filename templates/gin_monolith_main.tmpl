package main

import (
	"log"
	"github.com/gin-gonic/gin"
	"{{$.ModuleName}}/pkg/db"
	"gopkg.in/natefinch/lumberjack.v2"
{{range .Entities}}
	{{. | ToLower}}Handler "{{$.ModuleName}}/internal/{{. | ToLower}}/interface/http/v1/handlers"
	{{. | ToLower}}Routes "{{$.ModuleName}}/internal/{{. | ToLower}}/interface/http/v1/routes"
	{{. | ToLower}}Service "{{$.ModuleName}}/internal/{{. | ToLower}}/application"
	{{. | ToLower}}Repo "{{$.ModuleName}}/internal/{{. | ToLower}}/infrastructure/postgres"
{{end}}
)

func main() {
	// Setup logger
	log.SetOutput(&lumberjack.Logger{
		Filename:   "logs/app.log",
		MaxSize:    10, // megabytes
		MaxBackups: 3,
		MaxAge:     28, // days
	})

	// Initialize Gin router
	router := gin.Default()

	// Add middleware
	router.Use(gin.Logger())
	router.Use(gin.Recovery())

	// Health check endpoint
	router.GET("/health", func(c *gin.Context) {
		c.JSON(200, gin.H{
			"status": "healthy",
		})
	})

	// Initialize database connection
	dbConn, err := db.InitDB()
	if err != nil {
		log.Fatal("Failed to connect to database:", err)
	}
	defer dbConn.Close()

{{range .Entities}}
	// Initialize {{. | ToPascalCase}} dependencies
	{{. | ToLower}}Repository := {{. | ToLower}}Repo.NewPostgresRepository(dbConn)
	{{. | ToLower}}Service := {{. | ToLower}}Service.New{{. | ToPascalCase}}Service({{. | ToLower}}Repository)
	{{. | ToLower}}Handler := {{. | ToLower}}Handler.New{{. | ToPascalCase}}Handler({{. | ToLower}}Service)

	// Setup {{. | ToPascalCase}} routes
	{{. | ToLower}}Routes.Setup{{. | ToPascalCase}}Routes(router, {{. | ToLower}}Handler)
{{end}}

	// Start server
	log.Println("Server starting on :8080")
	if err := router.Run(":8080"); err != nil {
		log.Fatal("Failed to start server:", err)
	}
}
